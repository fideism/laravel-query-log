<?php

namespace Fideism\DatabaseLog\Tests;

use Illuminate\Database\Events\TransactionBeginning;
use Illuminate\Database\Events\TransactionCommitted;
use Illuminate\Support\Collection;
use Fideism\DatabaseLog\QueryMessage;
use Illuminate\Database\Connection;
use Illuminate\Database\Events\QueryExecuted;

class LogTest extends TestCase
{
    protected function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub

    }

    public function testEvents()
    {
        $message = new QueryMessage($this->makeEvents());

        $message->logMessage();

        $this->assertTrue(true);
    }

    protected function makeEvents()
    {
        $connection = $this->makeConnection();

        return Collection::make([
            new TransactionBeginning($connection),
            $this->makeQuery1(),
            $this->makeQuery2(),
            new TransactionCommitted($connection)
        ]);
    }

    protected function makeQuery2()
    {
        $sql = 'insert into users (id, name) values (?, ?)';
        $bind = ['1', 'admin'];
        $time = 2.2;
        $connection = $this->makeConnection();

        return new QueryExecuted($sql, $bind, $time, $connection);
    }

    protected function makeQuery1()
    {
        $sql = 'select * from `table` where `username` = :username';
        $bind = ['username' => 'username'];
        $time = 1.1;
        $connection = $this->makeConnection();

        return new QueryExecuted($sql, $bind, $time, $connection);
    }

    protected function makeConnection()
    {
        return new Connection('pdo', 'database', '', ['name' => 'mysql']);
    }
}